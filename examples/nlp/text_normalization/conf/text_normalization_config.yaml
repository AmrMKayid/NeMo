name: &name TextNormalization

pretrained_model: null # pretrained QAModel model from list_available_models()
do_training: true # training mode, for testing change to false
trainer:
  gpus: 1 # the number of gpus, 0 for CPU, or list with gpu indices
  num_nodes: 1
  max_epochs: 1 # the number of training epochs
  max_steps: null # precedence over max_epochs
  accumulate_grad_batches: 1 # accumulates grads every k batches
  precision: 16 # 16 to use AMP
  amp_level: O1 # O1 or O2 if using AMP
  accelerator: ddp
  gradient_clip_val: 0.0
  val_check_interval: 1.0 # check once per epoch .25 for 4 times per epoch
  checkpoint_callback: false # provided by exp_manager
  logger: false # provided by exp_manager
  # num_sanity_val_steps: 0
  log_every_n_steps: 1  # Interval of logging.

model:
  dataset:
    num_workers:  2
    pin_memory: false
    drop_last: false
    use_cache: true

  train_ds:
    file: /home/yzhang/data/nlp/text_norm/dataset/train.txt # .json file
    batch_size: 1 # per GPU
    shuffle: true
    num_samples: -1
    # Default values for the following params are retrieved from dataset config section, but you may override them
    num_workers: ${model.dataset.num_workers}
    drop_last: ${model.dataset.drop_last}
    pin_memory: ${model.dataset.pin_memory}


  validation_ds:
    file: /home/yzhang/data/nlp/text_norm/dataset/train.txt # .json file
    batch_size: 1 # per GPU
    shuffle: false
    num_samples: -1    
    # Default values for the following params are retrieved from dataset config section, but you may override them
    num_workers: ${model.dataset.num_workers}
    drop_last: ${model.dataset.drop_last}
    pin_memory: ${model.dataset.pin_memory}

  test_ds:
    file: /home/yzhang/data/nlp/text_norm/dataset/train.txt # .json file
    batch_size: 1 # per GPU
    shuffle: false
    num_samples: -1
    # Default values for the following params are retrieved from dataset config section, but you may override them
    num_workers: ${model.dataset.num_workers}
    drop_last: ${model.dataset.drop_last}
    pin_memory: ${model.dataset.pin_memory}

   
  tokenizer_context:
    tokenizer_name: sentencepiece # tokenizer that inherits from TokenizerSpec
    vocab_file: null
    tokenizer_model: /home/yzhang/data/nlp/text_norm/dataset/tmp/context_tok/tokenizer.model # only used if tokenizer is sentencepiece
    special_tokens: null

  tokenizer_encoder:
    tokenizer_name: sentencepiece # tokenizer that inherits from TokenizerSpec
    vocab_file: null
    tokenizer_model: /home/yzhang/data/nlp/text_norm/dataset/tmp/input_tok/tokenizer.model # only used if tokenizer is sentencepiece
    special_tokens: null

  tokenizer_decoder:
    tokenizer_name: sentencepiece # tokenizer that inherits from TokenizerSpec
    vocab_file: null
    tokenizer_model: /home/yzhang/data/nlp/text_norm/dataset/tmp/target_tok/tokenizer.model # only used if tokenizer is sentencepiece
    special_tokens: null

  context:
    embedding_size: 256
    num_layers: 1
    dropout: 0.1
    hidden_size: 256 # context encoder units


  tagger:
    embedding_size: 64 # output embedding size
    dropout: 0.1
    num_layers: 1
    hidden_size: 64 # tagging decoder units
    num_classes: 4


  seq_encoder:
    embedding_size: 256 # seq2seq input embedding size
    num_layers: 1
    dropout: 0.1
    hidden_size: 256 # seq2seq encoder units

  seq_decoder:
    embedding_size: 512 # seq2seq output embedding size
    num_layers: 1
    dropout: 0.1
    hidden_size: 512 # seq2seq decoder units
    attention_size: 256 # attention mechanism size
    teacher_forcing: 1.0
    max_len: 8
  

  optim:
    name: adamw
    lr: 10e-4
    weight_decay: 0.0
    sched:
      name: WarmupAnnealing

      # pytorch lightning args
      monitor: val_loss
      reduce_on_plateau: false

      # scheduler config override
      warmup_steps: null
      warmup_ratio: 0.1
      last_epoch: -1

exp_manager:
  exp_dir: null # where to store logs and checkpoints
  name: *name # name of experiment
  create_tensorboard_logger: True
  create_checkpoint_callback: True

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null